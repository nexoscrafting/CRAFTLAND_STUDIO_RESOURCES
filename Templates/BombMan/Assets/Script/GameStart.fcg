import "StdLibrary.fcc" as std
import "List.fcc" as list
import "Strings.fcc" as Strings
import "EditorGenLib.fcc" as EditorGenLib
import "Physics.fcc" as physics
import "./EventBusTool.fcg" as eventBus

graph GameStart {
    TriggePlayers List<entity<Player>>

    event OnEntityEnterTrigger(target entity<Entity>) {
        if TriggePlayers == nil {
            TriggePlayers = list.Create(0, 0)
        }
        //Avoid repeated triggers
        if list.Contains(TriggePlayers, target) {
            return
        }
        list.Append(TriggePlayers, target)
        var sumTriggeNum = list.Length(TriggePlayers)
        var allPlayerNum = list.Length(GetAllPlayers())
        //Check the number of ready players
        if sumTriggeNum < allPlayerNum {
            var tipText = Format("Player join: %v/%v, please wait...", List<object>{sumTriggeNum, allPlayerNum})
            for index, player in TriggePlayers {
                ShowTips(player, tipText, #FFFFFFFF, 1000)
            }
        }else {
            //When all players are ready, the countdown begins
            var countdownNum = 3
            for i = countdownNum, 0, -1 {
                var tipText = Format("Game countdown: %v", List<object>{i})
                for index, player in TriggePlayers {
                    ShowTips(player, tipText, #FFFFFFFF, 1000)
                }
                WaitForSeconds(1000)
            }
            DispatchEvent(OnMyGameStart, globalEntity, List<object>{1})
            DeleteEntity(thisEntity)
        }
    }
}