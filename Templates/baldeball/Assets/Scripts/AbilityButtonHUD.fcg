import "StdLibrary.fcc" as stdLibrary
import "EditorGenLib.fcc" as editorGenLib
import "Hud.fcc" as hud
import "Workflow.fcc" as workflow
import Player_AbilityButtonBind from "EditorGenLib.fcc" 

graph AbilityButtonHUD {

    isAbilityAvailable bool
    CD int;
    blocker entity<HudImageWidget>
    button entity<HudButtonWidget>
    text entity<HudLabelWidget>

    event OnRoundStart(roundIndex int) {
       
    }

    func InitButton(m_blocker entity<HudImageWidget>,m_button entity<HudButtonWidget>, m_text entity<HudLabelWidget>){
        button = m_button;
        blocker = m_blocker;
        text = m_text;
    }

    func ChangeButtonProperty(CD int){
        isAbilityAvailable = true;
        blocker<HudImageWidget>.FillDirection = FillDirectionType:Radial360;
        blocker<HudImageWidget>.FillAmount=0;
    }

   

    func BlockButton(playerClick entity<Player>){
        blocker<HudImageWidget>.FillAmount = 1;
        isAbilityAvailable = true;
    }
    async func StartCDButton(CD int){
        LogInfo("[Ability Button] Start Countdown");
        isAbilityAvailable = false;
        WaitForSeconds(10000);
        isAbilityAvailable = true;   
    }
    async func AbilityButtonClick(){
        if(isAbilityAvailable){
            wait StartCDButton(CD);
            LogInfo("[Ability Button] Finish Countdown");
        }
    }
 
}